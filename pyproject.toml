[build-system]
requires = [
    "setuptools>=59",
    "setuptools_scm[toml]>=6.4",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["vetiver"]
addopts = "--doctest-modules"
doctest_optionflags = "NORMALIZE_WHITESPACE"
markers = [
    "rsc_test: tests for connect",
    "docker: tests for docker deployments"
]

[tool.setuptools_scm]
fallback_version = "999"
version_scheme = 'post-release'

########## Tool - Pyright ##########
[tool.pyright]
# Paths of directories or files that should be included. If no paths
# are specified, pyright defaults to the directory that contains the
# config file. Paths may contain wildcard characters ** (a directory or
# multiple levels of directories), * (a sequence of zero or more
# characters), or ? (a single character). If no include paths are
# specified, the root path for the workspace is assumed.
include = [
    "vetiver/"
   ]

# Paths of directories or files whose diagnostic output (errors and
# warnings) should be suppressed even if they are an included file or
# within the transitive closure of an included file. Paths may contain
# wildcard characters ** (a directory or multiple levels of
# directories), * (a sequence of zero or more characters), or ? (a
# single character).
ignore = [
    #"vetiver/__init__.py",
    "vetiver/attach_pkgs.py",
    "vetiver/helpers.py",
    "vetiver/meta.py",
    "vetiver/mock.py",
    "vetiver/model_card.py",
    "vetiver/monitor.py",
    "vetiver/pin_read_write.py",
    "vetiver/prototype.py",
    "vetiver/rsconnect.py",
    "vetiver/server.py",
    "vetiver/templates.py",
    "vetiver/types.py",
    "vetiver/utils.py",
    "vetiver/vetiver_model.py",
    "vetiver/write_docker.py",
    "vetiver/write_fastapi.py",
    "vetiver/handlers/",
    "vetiver/data/",
    "vetiver/tests"
]

# Set of identifiers that should be assumed to contain a constant
# value wherever used within this program. For example, { "DEBUG": true
# } indicates that pyright should assume that the identifier DEBUG will
# always be equal to True. If this identifier is used within a
# conditional expression (such as if not DEBUG:) pyright will use the
# indicated value to determine whether the guarded block is reachable
# or not. Member expressions that reference one of these constants
# (e.g. my_module.DEBUG) are also supported.
defineConstant = { DEBUG = true }

# typeCheckingMode = "strict"
useLibraryCodeForTypes = true
reportUnnecessaryTypeIgnoreComment = true

# Specifies a list of execution environments (see below). Execution
# environments are searched from start to finish by comparing the path
# of a source file with the root path specified in the execution
# environment.
executionEnvironments = []

stubPath = ""
